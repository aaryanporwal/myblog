<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Aaryan&#39;s ðŸ“–</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Aaryan&#39;s ðŸ“–</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 May 2021 19:12:41 +0530</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Node.js To The Moon ðŸš€</title>
      <link>/posts/scaling-your-node.js-app-like-a-boss/</link>
      <pubDate>Wed, 05 May 2021 19:12:41 +0530</pubDate>
      
      <guid>/posts/scaling-your-node.js-app-like-a-boss/</guid>
      <description>Scaling your Node.js app like a boss Let&amp;rsquo;s cut to the chase, you run your fancy Node.js application on your machine hoping that it&amp;rsquo;ll be able to take full advantage of your CPU when you need it. But that&amp;rsquo;s not what happens, let&amp;rsquo;s see why and how you can make full use of the CPU power you paid for.
So a little history: JavaScript was created out of the rapidly growing demand for dynamic content on the web, it was designed to do simple things like creating a colourful mouse trail or to validate forms.</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>/posts/my-first-post/</link>
      <pubDate>Tue, 27 Apr 2021 17:10:16 +0530</pubDate>
      
      <guid>/posts/my-first-post/</guid>
      <description>Welcome Yes, if you can see this, you&amp;rsquo;re seeing my first post where I painfully spent hours trying to set up hugo and tweaked to my likingðŸ’–!</description>
    </item>
    
  </channel>
</rss>
